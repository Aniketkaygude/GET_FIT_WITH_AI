import cv2
import time
import cvzone
import numpy as np
from cvzone.PoseModule import PoseDetector

# libraries
# cvzone 1.5.4
# mediapipe

cap = cv2.VideoCapture(0, cv2.CAP_DSHOW)
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 1280.0)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 720.0)

detector = PoseDetector(detectionCon=0.5, trackCon=0.5)
ptime = 0
ctime = 0
color = (0, 0, 255)
dir = 0
count = 0
count_right = 0
count_left = 0
right_rep_completed = False
left_rep_completed = False

while True:
    _, img = cap.read()
    img = detector.findPose(img, draw=True)
    lmlst, bbox = detector.findPosition(img, draw=False)

    if lmlst:
        a1 = detector.findAngle(img, 12, 14, 16)
        a2 = detector.findAngle(img, 15, 13, 11)

        per_val1 = int(np.interp(a1, (50, 150), (100, 0)))
        per_val2 = int(np.interp(a2, (50, 150), (100, 0)))

        bar_val1 = int(np.interp(per_val1, (0, 100), (40 + 350, 40)))
        bar_val2 = int(np.interp(per_val2, (0, 100), (40 + 350, 40)))

        cv2.rectangle(img, (1220, bar_val1), (1220 + 35, 40 + 350), color, cv2.FILLED)
        cv2.rectangle(img, (1220, 40), (1220 + 35, 350 + 40), (), 3)
        cvzone.putTextRect(img, f'{per_val1}%', (1210, 25), 1.1, 2, colorT=(255, 255, 255), colorR=(255, 0, 255),
                           border=3, colorB=())

        cv2.rectangle(img, (5, bar_val2), (5 + 35, 40 + 350), color, cv2.FILLED)
        cv2.rectangle(img, (5, 40), (5 + 35, 40 + 350), (), 3)
        cvzone.putTextRect(img, f'{per_val2}%', (15, 25), 1.1, 2, colorT=(255, 255, 255), colorR=(255, 0, 255),
                           border=3, colorB=())

        if per_val1 == 100:
            if not right_rep_completed:
                count += 1
                count_right += 1
                right_rep_completed = True
                if left_rep_completed:
                    color = (255, 192, 203)  # Pink
                else:
                    color = (255, 0, 255)  # Magenta
        elif per_val1 == 0:
            right_rep_completed = False
            if not left_rep_completed:
                color = (0, 0, 255)  # Blue

        if per_val2 == 100:
            if not left_rep_completed:
                count += 1
                count_left += 1
                left_rep_completed = True
                if right_rep_completed:
                    color = (255, 192, 203)  # Pink
                else:
                    color = (255, 0, 255)  # Magenta
        elif per_val2 == 0:
            left_rep_completed = False
            if not right_rep_completed:
                color = (0, 0, 255)  # Blue
        else:
            color = (255, 0, 255)  # Magenta

        cvzone.putTextRect(img, f'count: {int(count)}', (508, 35), 2, 2, colorT=(255, 255, 255),
                           colorR=(255, 0, 255), border=3, colorB=(0, 0, 0))
        cvzone.putTextRect(img, f'left hand: {count_left}', (15, 40 + 400), 1.4, 2, colorT=(255, 255, 255),
                           colorR=(100, 100, 200), border=3, colorB=(0, 0, 0))
        cvzone.putTextRect(img, f'right hand: {count_right}', (1100, 40 + 400), 1.4, 2, colorT=(255, 255, 255),
                           colorR=(100, 100, 200), border=3, colorB=(0, 0, 0))

    ctime = time.time()
    fps = 1 / (ctime - ptime)
    ptime = ctime

    cvzone.putTextRect(img, f'FPS: {int(fps)}', (560, 700), 2, 2, colorT=(255, 255, 255), colorR=(0, 135, 0),
                       border=3, colorB=())
    cv2.imshow("dumble", img)

    if cv2.waitKey(1) == ord('q'):
        break

cv2.destroyAllWindows()
